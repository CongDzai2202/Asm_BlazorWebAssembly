@page "/Nganh/add"

@page "/Nganh/edit/{MaNganh:int}"

@using BlazorApp.Shared.Models
@inject HttpClient Http

@inject NavigationManager NavigationManager
<h1>Lớp</h1>
<hr />
<EditForm Model="@nganh" OnValidSubmit="SaveNganh">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="MaNghanh" class="form-label">Mã Ngành</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="nganh.MaNghanh" />
        </div>
        <ValidationMessage For="@(() => nganh.MaNghanh)" />
    </div>
    <div class="mb-3">
        <label for="TenNganh" class="form-label">Tên Ngành</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="nganh.TenNganh" />
        </div>
        <ValidationMessage For="@(() =>nganh.TenNganh)" />
    </div>
    
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {

    [Parameter]
    public int MaNganh { get; set; }
    protected string Title = "Add";
    protected Nganh nganh = new();
    protected override async Task OnParametersSetAsync()
    {
        if (MaNganh != 0)
        {
            Title = "Edit";
            nganh = await Http.GetFromJsonAsync<Nganh>("api/Nganh/" + MaNganh);
        }
    }
    protected async Task SaveNganh()
    {
        if (nganh.MaNghanh != 0)
        {
            await Http.PutAsJsonAsync("api/Nganh", MaNganh);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Nganh", MaNganh);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchnganhdetails");
    }

    }
